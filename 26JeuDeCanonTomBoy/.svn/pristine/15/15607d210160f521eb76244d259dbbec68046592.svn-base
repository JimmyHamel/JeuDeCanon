<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_77) on Tue Apr 26 19:47:14 EDT 2016 -->
<title>Body</title>
<meta name="date" content="2016-04-26">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Body";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Body.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../objetsDessinable/BoutonPersonnalise.html" title="class in objetsDessinable"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?objetsDessinable/Body.html" target="_top">Frames</a></li>
<li><a href="Body.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">objetsDessinable</div>
<h2 title="Class Body" class="title">Class Body</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>objetsDessinable.Body</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../interfaces/Dessinable.html" title="interface in interfaces">Dessinable</a></dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../objetsDessinable/Ennemies.html" title="class in objetsDessinable">Ennemies</a>, <a href="../objetsDessinable/Joueur.html" title="class in objetsDessinable">Joueur</a>, <a href="../objetsDessinable/Ressort.html" title="class in objetsDessinable">Ressort</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">Body</span>
extends java.lang.Object
implements <a href="../interfaces/Dessinable.html" title="interface in interfaces">Dessinable</a></pre>
<div class="block">La classe Body est une super-classe utilisée pour les objets de type
 Ennemies, Joueur et n'importe quel objet qui veut se dessiner comme étant un carré avec une position et des valeurs réelles de longueur et largeur.
 Elle permet aussi d'avoir des images rectangulaires avec
 une boîte de collision.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Mitchell Mastromonaco 
 Date de création : 8 février 2016</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#Body-double-double-double-double-">Body</a></span>(double&nbsp;posX,
    double&nbsp;posY,
    double&nbsp;longueurReelle,
    double&nbsp;largeurReelle)</code>
<div class="block">Le constructeur de Body.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#creerRepresentationGeometrique--">creerRepresentationGeometrique</a></span>()</code>
<div class="block">Cette méthode crée une représentation géométrique de l'objet dessinable.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#dessiner-java.awt.Graphics2D-java.awt.geom.AffineTransform-">dessiner</a></span>(java.awt.Graphics2D&nbsp;g2d,
        java.awt.geom.AffineTransform&nbsp;mat)</code>
<div class="block">Cette méthode permet à la classe de dessiner un objet dans un contexte de
 graphiques en deux dimensions et avec une certaine matrice de
 transformation.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>java.awt.geom.Rectangle2D.Double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#getBoiteDeCollision--">getBoiteDeCollision</a></span>()</code>
<div class="block">Cette méthode retourne la boîte de collision de l'objet de type Body.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>java.awt.geom.Rectangle2D.Double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#getCarre--">getCarre</a></span>()</code>
<div class="block">Cette méthode retourne le rectangle qu'affiche la classe Body.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>java.awt.Image</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#getImage--">getImage</a></span>()</code>
<div class="block">Cette méthode retourne la représentation graphique de l'objet de type
 Body.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#getLargeurReelle--">getLargeurReelle</a></span>()</code>
<div class="block">Cette méthode retourne la valeur de la largeur réelle pour l'objet de
 type Body en m.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#getLongueurReelle--">getLongueurReelle</a></span>()</code>
<div class="block">Cette méthode retourne la valeur de la longueur réelle pour l'objet de
 type Body en m.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#getPosX--">getPosX</a></span>()</code>
<div class="block">Cette méthode retourne la valeur de la position sur l'axe des abscisses
 de l'objet de type Body en m.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#getPosY--">getPosY</a></span>()</code>
<div class="block">Cette méthode retourne la valeur de la position sur l'axe des ordonnées
 de l'objet de type Body en m.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#loadImage-java.lang.String-">loadImage</a></span>(java.lang.String&nbsp;fileName)</code>
<div class="block">Une méthode  permettant de rechercher dans le fichier ressources un
 objet de type Image.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#setBoiteDeCollision-java.awt.geom.Rectangle2D.Double-">setBoiteDeCollision</a></span>(java.awt.geom.Rectangle2D.Double&nbsp;boiteDeCollision)</code>
<div class="block">Cette méthode fixe la boîte de collision de l'objet de type Body.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#setCarre-java.awt.geom.Rectangle2D.Double-">setCarre</a></span>(java.awt.geom.Rectangle2D.Double&nbsp;carre)</code>
<div class="block">Cette méthode fixe le rectangle qu'affiche la classe Body.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#setImage-java.awt.Image-">setImage</a></span>(java.awt.Image&nbsp;image)</code>
<div class="block">Cette méthode fixe la représentation graphique de l'objet de type Body.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#setLargeurReelle-double-">setLargeurReelle</a></span>(double&nbsp;largeurReelle)</code>
<div class="block">Cette méthode fixe la valeur de la largeur réelle pour l'objet de type
 Body en m.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#setLongueurReelle-double-">setLongueurReelle</a></span>(double&nbsp;longueurReelle)</code>
<div class="block">Cette méthode fixe la valeur de la longueur réelle pour l'objet de type
 Body en m.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#setPosX-double-">setPosX</a></span>(double&nbsp;posX)</code>
<div class="block">Cette méthode fixe la valeur de la position sur l'axe des abscisses de
 l'objet de type Body en m.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../objetsDessinable/Body.html#setPosY-double-">setPosY</a></span>(double&nbsp;posY)</code>
<div class="block">Cette méthode fixe la valeur de la position sur l'axe des ordonnées de
 l'objet de type Body en m.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Body-double-double-double-double-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Body</h4>
<pre>public&nbsp;Body(double&nbsp;posX,
            double&nbsp;posY,
            double&nbsp;longueurReelle,
            double&nbsp;largeurReelle)</pre>
<div class="block">Le constructeur de Body. Lorsque le Body est prêt. Ce constructeur
 n'utilise pas de fichier Image pour dessiner l'objet.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>posX</code> - La position sur l'axe des abscisses pour l'objet de type Body
            en m.</dd>
<dd><code>posY</code> - La position sur l'axe des ordonnées pour l'objet de type Body
            en m.</dd>
<dd><code>longueurReelle</code> - La longueur réelle pour l'objet de type Body en m.</dd>
<dd><code>largeurReelle</code> - La largeur réelle pour l'objet de type Body en m.</dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="dessiner-java.awt.Graphics2D-java.awt.geom.AffineTransform-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dessiner</h4>
<pre>public&nbsp;void&nbsp;dessiner(java.awt.Graphics2D&nbsp;g2d,
                     java.awt.geom.AffineTransform&nbsp;mat)</pre>
<div class="block">Cette méthode permet à la classe de dessiner un objet dans un contexte de
 graphiques en deux dimensions et avec une certaine matrice de
 transformation.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../interfaces/Dessinable.html#dessiner-java.awt.Graphics2D-java.awt.geom.AffineTransform-">dessiner</a></code>&nbsp;in interface&nbsp;<code><a href="../interfaces/Dessinable.html" title="interface in interfaces">Dessinable</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>g2d</code> - Ce paramètre est le contexte graphique où l'objet d'une classe
            dessinable voudra être dessinée.</dd>
<dd><code>mat</code> - Ce paramètre est toutes les transformations qui sont
            appliquées à l'objet qui implémente la classe Dessinable.</dd>
</dl>
</li>
</ul>
<a name="creerRepresentationGeometrique--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>creerRepresentationGeometrique</h4>
<pre>public&nbsp;void&nbsp;creerRepresentationGeometrique()</pre>
<div class="block">Cette méthode crée une représentation géométrique de l'objet dessinable.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../interfaces/Dessinable.html#creerRepresentationGeometrique--">creerRepresentationGeometrique</a></code>&nbsp;in interface&nbsp;<code><a href="../interfaces/Dessinable.html" title="interface in interfaces">Dessinable</a></code></dd>
</dl>
</li>
</ul>
<a name="getPosX--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPosX</h4>
<pre>public&nbsp;double&nbsp;getPosX()</pre>
<div class="block">Cette méthode retourne la valeur de la position sur l'axe des abscisses
 de l'objet de type Body en m.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La position sur l'axe des abscisses de l'objet de type Body en m.</dd>
</dl>
</li>
</ul>
<a name="setPosX-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPosX</h4>
<pre>public&nbsp;void&nbsp;setPosX(double&nbsp;posX)</pre>
<div class="block">Cette méthode fixe la valeur de la position sur l'axe des abscisses de
 l'objet de type Body en m.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>posX</code> - La position sur l'axe des abscisses de l'objet de type Body en
            m.</dd>
</dl>
</li>
</ul>
<a name="getPosY--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPosY</h4>
<pre>public&nbsp;double&nbsp;getPosY()</pre>
<div class="block">Cette méthode retourne la valeur de la position sur l'axe des ordonnées
 de l'objet de type Body en m.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La position sur l'axe des ordonnées de l'objet de type Body en m.</dd>
</dl>
</li>
</ul>
<a name="setPosY-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPosY</h4>
<pre>public&nbsp;void&nbsp;setPosY(double&nbsp;posY)</pre>
<div class="block">Cette méthode fixe la valeur de la position sur l'axe des ordonnées de
 l'objet de type Body en m.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>posY</code> - La position sur l'axe des ordonnées de l'objet de type Body en
            m.</dd>
</dl>
</li>
</ul>
<a name="getBoiteDeCollision--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBoiteDeCollision</h4>
<pre>public&nbsp;java.awt.geom.Rectangle2D.Double&nbsp;getBoiteDeCollision()</pre>
<div class="block">Cette méthode retourne la boîte de collision de l'objet de type Body.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La boîte de collision de l'objet de type Body.</dd>
</dl>
</li>
</ul>
<a name="setBoiteDeCollision-java.awt.geom.Rectangle2D.Double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBoiteDeCollision</h4>
<pre>public&nbsp;void&nbsp;setBoiteDeCollision(java.awt.geom.Rectangle2D.Double&nbsp;boiteDeCollision)</pre>
<div class="block">Cette méthode fixe la boîte de collision de l'objet de type Body.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>boiteDeCollision</code> - La boîte de collision de l'objet de type Body.</dd>
</dl>
</li>
</ul>
<a name="getImage--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getImage</h4>
<pre>public&nbsp;java.awt.Image&nbsp;getImage()</pre>
<div class="block">Cette méthode retourne la représentation graphique de l'objet de type
 Body.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La représentation graphique de l'objet de type Body.</dd>
</dl>
</li>
</ul>
<a name="setImage-java.awt.Image-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setImage</h4>
<pre>public&nbsp;void&nbsp;setImage(java.awt.Image&nbsp;image)</pre>
<div class="block">Cette méthode fixe la représentation graphique de l'objet de type Body.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>image</code> - La représentation graphique de l'objet de type Body.</dd>
</dl>
</li>
</ul>
<a name="getLongueurReelle--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLongueurReelle</h4>
<pre>public&nbsp;double&nbsp;getLongueurReelle()</pre>
<div class="block">Cette méthode retourne la valeur de la longueur réelle pour l'objet de
 type Body en m.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La longueur réelle pour l'objet de type Body en m.</dd>
</dl>
</li>
</ul>
<a name="setLongueurReelle-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setLongueurReelle</h4>
<pre>public&nbsp;void&nbsp;setLongueurReelle(double&nbsp;longueurReelle)</pre>
<div class="block">Cette méthode fixe la valeur de la longueur réelle pour l'objet de type
 Body en m.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>longueurReelle</code> - La longueur réelle pour l'objet de type Body en m.</dd>
</dl>
</li>
</ul>
<a name="getLargeurReelle--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getLargeurReelle</h4>
<pre>public&nbsp;double&nbsp;getLargeurReelle()</pre>
<div class="block">Cette méthode retourne la valeur de la largeur réelle pour l'objet de
 type Body en m.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La largeur réelle pour l'objet de type Body en m.</dd>
</dl>
</li>
</ul>
<a name="setLargeurReelle-double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setLargeurReelle</h4>
<pre>public&nbsp;void&nbsp;setLargeurReelle(double&nbsp;largeurReelle)</pre>
<div class="block">Cette méthode fixe la valeur de la largeur réelle pour l'objet de type
 Body en m.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>largeurReelle</code> - La largeur réelle pour l'objet de type Body en m.</dd>
</dl>
</li>
</ul>
<a name="getCarre--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCarre</h4>
<pre>public&nbsp;java.awt.geom.Rectangle2D.Double&nbsp;getCarre()</pre>
<div class="block">Cette méthode retourne le rectangle qu'affiche la classe Body.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Le rectangle qu'affiche la classe Body.</dd>
</dl>
</li>
</ul>
<a name="setCarre-java.awt.geom.Rectangle2D.Double-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setCarre</h4>
<pre>public&nbsp;void&nbsp;setCarre(java.awt.geom.Rectangle2D.Double&nbsp;carre)</pre>
<div class="block">Cette méthode fixe le rectangle qu'affiche la classe Body.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>carre</code> - Le nouveau carré qu'affichera la classe Body</dd>
</dl>
</li>
</ul>
<a name="loadImage-java.lang.String-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>loadImage</h4>
<pre>public&nbsp;void&nbsp;loadImage(java.lang.String&nbsp;fileName)</pre>
<div class="block">Une méthode  permettant de rechercher dans le fichier ressources un
 objet de type Image.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>fileName</code> - = Le nom de l'image recherchée dans le fichier ressources.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Body.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../objetsDessinable/BoutonPersonnalise.html" title="class in objetsDessinable"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?objetsDessinable/Body.html" target="_top">Frames</a></li>
<li><a href="Body.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
